#!/bin/bash


alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano -w PKGBUILD'
alias more=less
alias vi=vim

# ex - archive extractor
# usage: ex <file>
ex ()
{
	if [ -f $1 ] ; then
		typeset -l TMP
		TMP=$1
		case $TMP in
			*.tar.bz2)   tar xjf $1   ;;
			*.tar.gz)    tar xzf $1   ;;
			*.bz2)       bunzip2 $1   ;;
			*.rar)       unrar x $1   ;;
			*.gz)        gunzip $1    ;;
			*.tar)       tar xf $1    ;;
			*.tbz2)      tar xjf $1   ;;
			*.tgz)       tar xzf $1   ;;
			*.zip)       unzip $1     ;;
			*.z)         uncompress $1;;
			*.7z)        7z x $1      ;;
			*)           echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

# better yaourt colors
export YAOURT_COLORS="nb=1:pkg=1:ver=1;32:lver=1;45:installed=1;42:grp=1;34:od=1;41;5:votes=1;44:dsc=0:other=1;35"

# for ibus
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

# ll=ls -h
alias ll="ls -lh"
alias sl=ls
alias l=ls

# run nemo of current pwd, means "explorer"
alias e="nemo \$PWD & 1> /dev/null"

alias cv="progress -w"
alias py="python"
alias pc="proxychains"

# picocom quick startup
com()
{
        DEV="/dev/ttyUSB0"
        BAUDRATE=115200
        if [ $1 ];then
                DEV=$1
        fi
        if [ $2 ];then
                BAUDRATE=$2
        fi
        sudo picocom $DEV -b $BAUDRATE
}

# ssh
gossh()
{
	case "$1" in
	  mysdk)
		sshpass -p "123456" ssh mpc@mysdk
		;;
	  pi)
		sshpass -p "654321" ssh pi@factory-tools
		;;
	  skpi)
		sshpass -p "654321" ssh pi@sktool-factory
		;;
	  *)
		echo "gossh error"
		;;
	esac
}

# thefuck
eval $(thefuck --alias)

# set proxy
setproxy() {
	export proxy="http://r-proxy:7890"
	export http_proxy=$proxy
	export https_proxy=$proxy
	export ftp_proxy=$proxy
	export all_proxy=$proxy
	export no_proxy="localhost, 127.0.0.1, ::1"
}
unsetproxy() {
	unset http_proxy
	unset https_proxy
	unset ftp_proxy
	unset no_proxy
}

# export fakeroot environment
source $HOME/fakeroot/set-env.sh

# google android git-repo
export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/'

# update system time from NTP server
update-sys-time() {
	sudo ntpdate -u ntp.api.bz
	sudo hwclock -w
}

# open vscode for current dir
c() {
	code $PWD
}

# open any files in desktop environment
o() {
	xdg-open $*
}

# execute with nohup
nh() {
	nohup $* >/dev/null 2>&1 &
}

# open a typora
ty() {
	nh typora $*
}

# git editor
export GIT_EDITOR=vim

# git user info
git-user-ebi() {
	git config user.email "ebi@1000bug.com"
	git config user.name  "ebi"
}

git-user-noodlefighter() {
        git config user.email "noodlefighter@gmail.com"
        git config user.name  "noodlefighter"
}

# add ignore zsh-git status to git repo
git-disable-zsh() {
	git config oh-my-zsh.hide-status 1
	git config oh-my-zsh.hide-dirty 1
}
git-enable-zsh() {
	git config oh-my-zsh.hide-status 0
	git config oh-my-zsh.hide-dirty 0
}

function countdown(){
	date1=$((`date +%s` + $1));
	while [ "$date1" -ge `date +%s` ]; do
		echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
		sleep 0.1
	done
}
function stopwatch(){
	date1=`date +%s`;
	while true; do
		echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
		sleep 0.1
	done
}

# tx/rx with ZMODEM
# example 1) sendz /dev/ttyUSB0 a.txt b.txt c.txt
# example 2) sendz /dev/ttyUSB0 *.ko
# example 3) zrecv /dev/ttyUSB0
__zmodem_szrz() {
	DEV=$2
	if [ $1 == 'zsend' ]; then
		CMD=sz
	elif [ $1 == 'zrecv' ]; then
		CMD=rz
	else
		echo "Wrong command."
		return 1
	fi
	stty -F $DEV 115200
	shift 2
	$CMD $* > $DEV < $DEV
}
zsend() {
	__zmodem_szrz zsend $*
}
zrecv() {
	__zmodem_szrz zrecv $*
}

# rt-thread config
export RTT_CC=gcc
export RTT_GCC_PATH=/usr/bin

export TERM=xterm
export TERMINFO=/usr/share/terminfo
export FLUTTER_STORAGE_BASE_URL="https://mirrors.tuna.tsinghua.edu.cn/flutter"
export PUB_HOSTED_URL="https://mirrors.tuna.tsinghua.edu.cn/dart-pub"

export PATH=$PATH:$HOME/.yarn/bin
export PATH=$PATH:$HOME/.cargo/bin

