#!/bin/bash

# -------------------------------- common functions
# execute with nohup
nh() {
	nohup $* >/dev/null 2>&1 &
}

# -------------------------------- alias
alias df='df -h'
alias free='free -h'
alias iostat='iostat -h'
alias vi=vim
alias cv="progress -w"
alias py="python"
alias pc="proxychains"
alias tf='tail -f'
alias dm='sudo dmesg --follow'
alias locate='locate -i'
alias lg='lazygit'
alias ra='ranger'

# pacman alias
alias yy='sudo pacman -S'
alias yys='pacman -Ss'
alias yyl='pacman -Ql'
alias yyo='pacman -Qo'
alias yyi='pacman -Qi'

# file
alias ll="ls -lh"
alias sl=ls
alias l=ls
alias la='ls -lAh'
alias co='chown'
alias cm='chmod'
alias md='mkdir -p'

# list disk
alias fl='sudo fdisk -l'

# do not use rm
alias rm="echo do not use rm, use trash-put(tp), or /bin/rm && return 1"
alias rm-use='unalias rm'
alias tp='trash-put'

if ! which safe-rm > /dev/null ; then
  echo "safe-rm not found, please install it ..."
fi

# desktop
alias e="nemo \$PWD & 1> /dev/null"        # run nemo of current pwd, means "explorer"
alias c='code $PWD'                        # open vscode for current dir
alias o='nh xdg-open'
alias ty='nh typora'
alias mt='marktext'
rdp() {
  RDP_HOST="/v:$1"
  RDP_USER="/u:$2"
  RDP_PASSWD="/p:$3"

  set -x
  xfreerdp3 $RDP_USER $RDP_PASSWD /w:1900 /h:1040 /audio-mode:0 $RDP_HOST
  # audio-mode: 0 - redirect locally, 1 - leave on server, 2 - none
}

# net
ssh-port-forward() {
  local HOST=$1
  local PORT=$2
  ssh -NL $PORT:localhost:$PORT $HOST
}

ssh-socks5-tunnel-port5888() {
  local HOST=$1
  ssh -ND 5888 $HOST
}

# for X11 xclip
alias clip="tr -d '\n' | xclip -selection c"
alias pwd2xclip="pwd |tr -d '\n' |clip"
path2xclip() {
  print $PWD/$1 |tr -d '\n' |clip
}


# -------------------------------- archive file functions
# ex - archive extractor
# usage: ex <file>
# usage: pl <file>
# usage: pk <file> <file list> ...
ex ()
{
	if [ -f $1 ] ; then
		typeset -l TMP
		TMP=$1
		case $TMP in
			*.tar.bz2)   tar xjf $1   ;;
			*.tar.gz)    tar xzf $1   ;;
			*.tar.xz)    tar xJf $1   ;;
			*.bz2)       bunzip2 $1   ;;
			*.rar)       unrar x $1   ;;
			*.gz)        gunzip $1    ;;
			*.tar)       tar xf $1    ;;
			*.tbz2)      tar xjf $1   ;;
			*.tgz)       tar xzf $1   ;;
			*.zip)       unzip $1     ;;
			*.z)         uncompress $1;;
			*.7z)        7z x $1      ;;
			*.iso)       bsdtar -xf $1;;
      *.rar)       unrar x $1   ;;
			*)           echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}
pl ()
{
	if [ -f $1 ] ; then
		typeset -l TMP
		TMP=$1
		case $TMP in
			*.tar.bz2)   tar tjf $1   ;;
			*.tar.gz)    tar tzf $1   ;;
			*.tar.xz)    tar tJf $1   ;;
			*.tar)       tar tf $1    ;;
			*.tbz2)      tar tjf $1   ;;
			*.tgz)       tar tzf $1   ;;
			*.zip)       unzip -l $1  ;;
			*.7z)        7z l $1      ;;
			*.iso)       bsdtar -t $1 ;;
      *.rar)       unrar l $1   ;;
			*)           echo "'$1' cannot be listed via pl()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}
pk ()
{
	if [ ! -e $1 ] ; then
		typeset -l TMP
		TMP=$1
		FILE=$1
		shift 1
		case $TMP in
			*.tar.bz2)   tar cjf $FILE $*  ;;
			*.tar.gz)    tar czf $FILE $*  ;;
			*.tar.xz)    tar cJf $FILE $*  ;;
			*.tar)       tar cf $FILE $*   ;;
			*.tbz2)      tar cjf $FILE $*  ;;
			*.tgz)       tar czf $FILE $*  ;;
			*.zip)       zip $FILE $*      ;;
			*.7z)        7z a $FILE $*     ;;
			*)           echo "'$1' cannot be packed via pk()" ;;
		esac
	else
		echo "'$1' is already exsit"
	fi
}

# -------------------------------- quick quick quick
# picocom quick startup
com()
{
        DEV="/dev/ttyUSB0"
        BAUDRATE=115200
        if [ $1 ];then
                DEV=$1
        fi
        if [ $2 ];then
                BAUDRATE=$2
        fi
        picocom $DEV -b $BAUDRATE
}
# write hex with ctrl+a,w
comhex()
{
        DEV="/dev/ttyUSB0"
        BAUDRATE=115200
        if [ $1 ];then
                DEV=$1
        fi
        if [ $2 ];then
                BAUDRATE=$2
        fi
        picocom $DEV -b $BAUDRATE --imap spchex,nrmhex,8bithex
}

# update system time from NTP server
update-sys-time() {
	sudo ntpdate -u ntp.aliyun.com
	sudo hwclock -w
}

function countdown(){
	date1=$((`date +%s` + $1));
	while [ "$date1" -ge `date +%s` ]; do
		echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
		sleep 0.1
	done
}
function stopwatch(){
	date1=`date +%s`;
	while true; do
		echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
		sleep 0.1
	done
}

# tx/rx with ZMODEM
# example 1) sendz /dev/ttyUSB0 a.txt b.txt c.txt
# example 2) sendz /dev/ttyUSB0 *.ko
# example 3) zrecv /dev/ttyUSB0
__zmodem_szrz() {
	DEV=$2
	if [[ $1 == 'zsend' ]]; then
		CMD=sz
	elif [[ $1 == 'zrecv' ]]; then
		CMD=rz
	else
		echo "Wrong command."
		return 1
	fi
	stty -F $DEV 115200
	shift 2
	$CMD $* > $DEV < $DEV
}
zsend() {
	__zmodem_szrz zsend $*
}
zrecv() {
	__zmodem_szrz zrecv $*
}

# -------------------------------- for shell
# load thefuck
eval $(thefuck --alias)

# conda
load-conda()
{
	__conda_setup="$('/home/r/miniconda3/bin/conda' "shell.$(basename $SHELL)" 'hook' 2> /dev/null)"
	if [ $? -eq 0 ]; then
		eval "$__conda_setup"
	else
		if [ -f "/home/r/miniconda3/etc/profile.d/conda.sh" ]; then
			. "/home/r/miniconda3/etc/profile.d/conda.sh"
		else
			export PATH="/home/r/miniconda3/bin:$PATH"
		fi
	fi
	unset __conda_setup
}
alias activate="conda activate"

# add ignore zsh-git status to git repo
git-disable-zsh() {
	git config oh-my-zsh.hide-status 1
	git config oh-my-zsh.hide-dirty 1
}
git-enable-zsh() {
	git config oh-my-zsh.hide-status 0
	git config oh-my-zsh.hide-dirty 0
}

quick-git-patch-init-ebi() {
  git init
  git-user-ebi
  git add --all
  git commit -m init
}
-quick-git-patch-execute() {
  git add --all
  git commit -m "my patch"
  git format-patch -1
  mv 0001-my-patch.patch ../
}
quick-git-patch-execute-amend() {
  git add --all
  git commit --amend -m "my patch"
  git format-patch -1
  mv 0001-my-patch.patch ../
}

# -------------------------------- user config

# set proxy
setproxy() {
	export proxy="http://r-proxy:7890"
	export http_proxy=$proxy
	export https_proxy=$proxy
	export ftp_proxy=$proxy
	export all_proxy=$proxy
	export no_proxy="localhost, 127.0.0.1, ::1"
	export use_proxy=on
}
unsetproxy() {
  unset proxy
	unset http_proxy
	unset https_proxy
	unset ftp_proxy
	unset all_proxy
	unset no_proxy
	unset use_proxy
}


# google android git-repo
export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/'

# rt-thread config
export RTT_CC=gcc
export RTT_GCC_PATH=/usr/bin

export TERM=xterm-256color
export TERMINFO=/usr/share/terminfo
export FLUTTER_STORAGE_BASE_URL="https://mirrors.tuna.tsinghua.edu.cn/flutter"
export PUB_HOSTED_URL="https://mirrors.tuna.tsinghua.edu.cn/dart-pub"

export PATH=\
:$HOME/bin\
:$HOME/.nimble/bin\
:$HOME/.yarn/bin\
:$HOME/.cargo/bin\
:$HOME/.gem/ruby/2.7.0/bin\
:$HOME/sdk/flutter/bin\
:$PATH

# git editor
export GIT_EDITOR=vim

# load private config
if [[ -e $HOME/.shell_private ]]; then
  source $HOME/.shell_private
fi
